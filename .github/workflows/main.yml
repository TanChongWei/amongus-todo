name: Dev Tools HW

on:
  push:
    branches: [ capstone ]
  pull_request:
    branches: [ capstone ]

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
    # Install dependencies and runs tests
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: npm ci
        
      - name: Run test
        run: npm run test
  
  docker-build-image-synk-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    # Build docker image
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Docker image
      run: docker build -t amongustodo/test .
    
    #Snyk security scan on docker image
    - name: Snyk scan on Docker image
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with: 
        image: amongustodo/test
    
  AWS-ECR-push:
    needs: [run-tests, docker-build-image-synk-scan]
    runs-on: ubuntu-latest
    steps:
    - name: configure AWS credentials
      uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2

    - name: Build and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t cwdevtoolscapstone .
          docker tag cwdevtoolscapstone:latest 134923971410.dkr.ecr.ap-southeast-1.amazonaws.com/cwdevtoolscapstone:latest
          docker push 134923971410.dkr.ecr.ap-southeast-1.amazonaws.com/cwdevtoolscapstone:latest
          echo "docker image pushed to AWS ECR"
    
  # docker-push:
  #   needs: [run-tests, docker-build-image-synk-scan]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Docker Hub Login
  #   # Dockerhub login
  #     uses: docker/login-action@v1
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}
    
  #   # Dockerhub push
  #   - name: Docker build and push
  #     id: docker_build
  #     uses: docker/build-push-action@v2
  #     with:
  #       push: true
  #       tags: ${{ secrets.DOCKERHUB_USERNAME }}/devtoolscapstone:latest
    
